{"version":3,"sources":["src/settings.js","src/utils.js","src/partials/Board.js","src/partials/CenterLine.js","src/partials/KeyListener.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/SettingsModal.js","src/partials/Game.js","src/index.js"],"names":["SETTINGS","SCORE_LIMIT","SINGLE_PLAYER","COMP_DIFFICULTY","COMP_MAX_SPEED","BALL_RADIUS","BOARD_GAP","BOARD_HEIGHT","BOARD_WIDTH","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_SPEED","COLOR_BG","COLOR_ACCENT","FONT_FAMILY","FONT_SIZE","KEYS","PAUSE","PLAYER1","UP","DOWN","PLAYER2","SVG_NS","urlParams","URLSearchParams","window","location","search","keys","k","parseInt","get","setSvgAttr","el","key","val","setAttributeNS","makeSvgEl","tag","document","createElementNS","Board","$board","CenterLine","$centerLine","KeyListener","activeKeys","addEventListener","handleKeyDown","bind","handleKeyUp","e","includes","push","splice","indexOf","Paddle","x","initialY","keyDown","keyUp","y","paused","$paddle","move","ballPos","Math","random","yDiff","distance","checkCompMove","checkMove","left","top","right","bottom","Ball","increaseScore","$ball","ping","Audio","SOUND","reset","vx","paddles","atTop","atBottom","vy","play","catch","paddleLeft","paddleRight","floor","abs","checkWallCollision","checkGoal","Score","onFinish","score","$score","highestScore","max","winner","i","checkWinner","textContent","SettingsModal","btnEl","pause","isOpen","getElementById","toggle","$modal","createElement","classList","add","$modalContent","style","fontFamily","$modalCloseBtn","innerText","$resetBtn","href","split","$paddleSpeedLabel","setAttribute","$paddleSpeedInput","appendChild","$ballRadiusLabel","$ballRadiusInput","$paddleHeightLabel","$paddleHeightInput","$onePlayerToggleLabel","$onePlayerToggleInput","$compDifficultyLabel","$compDifficultyInput","$createGameBtn","value","checked","close","open","documentElement","removeChild","Game","element","$svg","finished","hardPaused","finish","ball","update","coordinates","settings","hardPause","$container","position","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.648c295c.js","sourceRoot":"..","sourcesContent":["const SETTINGS = {\r\n  // game\r\n  SCORE_LIMIT: 5,\r\n  SINGLE_PLAYER: 0,\r\n\r\n  // comp sim\r\n  COMP_DIFFICULTY: 7,\r\n  COMP_MAX_SPEED: 1,\r\n\r\n  // dimensions\r\n  BALL_RADIUS: 8,\r\n  BOARD_GAP: 10,\r\n  BOARD_HEIGHT: 256,\r\n  BOARD_WIDTH: 512,\r\n  PADDLE_WIDTH: 8,\r\n  PADDLE_HEIGHT: 56,\r\n\r\n  // movement\r\n  PADDLE_SPEED: 15,\r\n\r\n  // colors\r\n  COLOR_BG: '#353535',\r\n  COLOR_ACCENT: 'white',\r\n\r\n  // fonts\r\n  FONT_FAMILY: 'Silkscreen Web',\r\n  FONT_SIZE: 30,\r\n\r\n  // controls\r\n  KEYS: {\r\n    PAUSE: ' ',\r\n    PLAYER1: {\r\n      UP: 'a',\r\n      DOWN: 'z'\r\n    },\r\n    PLAYER2: {\r\n      UP: 'ArrowUp',\r\n      DOWN: 'ArrowDown'\r\n    }\r\n  },\r\n\r\n  // misc\r\n  SVG_NS: 'http://www.w3.org/2000/svg'\r\n};\r\n\r\n// singleton to check and apply URL query string settings\r\n(() => {\r\n  const urlParams = new URLSearchParams(window.location.search)\r\n\r\n  for (let k of urlParams.keys()) {\r\n    SETTINGS[k] = parseInt(urlParams.get(k))\r\n  }\r\n})()\r\n\r\nexport default SETTINGS\r\n","import SETTINGS from './settings'\r\nconst { SVG_NS } = SETTINGS\r\n\r\nexport const setSvgAttr = (el, key, val) => el.setAttributeNS(null, key, val)\r\nexport const makeSvgEl = tag => document.createElementNS(SVG_NS, tag)\r\n","import {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  BOARD_WIDTH,\r\n  BOARD_HEIGHT,\r\n  COLOR_BG\r\n} = SETTINGS\r\n\r\nexport default class Board {\r\n  constructor () {\r\n    this.$board = makeEl('rect')\r\n    setAttr(this.$board, 'width', BOARD_WIDTH)\r\n    setAttr(this.$board, 'height', BOARD_HEIGHT)\r\n    setAttr(this.$board, 'fill', COLOR_BG)\r\n  }\r\n\r\n  get el () {\r\n    return this.$board\r\n  }\r\n}\r\n","import {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  BOARD_WIDTH,\r\n  BOARD_HEIGHT,\r\n  COLOR_ACCENT\r\n} = SETTINGS\r\n\r\nexport default class CenterLine {\r\n  constructor () {\r\n    this.$centerLine = makeEl('line')\r\n    setAttr(this.$centerLine, 'x1', BOARD_WIDTH / 2)\r\n    setAttr(this.$centerLine, 'x2', BOARD_WIDTH / 2)\r\n    setAttr(this.$centerLine, 'y1', 0)\r\n    setAttr(this.$centerLine, 'y2', BOARD_HEIGHT)\r\n    setAttr(this.$centerLine, 'stroke', COLOR_ACCENT)\r\n    setAttr(this.$centerLine, 'stroke-width', 4)\r\n    setAttr(this.$centerLine, 'stroke-dasharray', '15')\r\n  }\r\n\r\n  get el () {\r\n    return this.$centerLine\r\n  }\r\n}\r\n","export default class KeyListener {\r\n  constructor () {\r\n    this.activeKeys = []\r\n    document.addEventListener('keydown', this.handleKeyDown.bind(this))\r\n    document.addEventListener('keyup', this.handleKeyUp.bind(this))\r\n  }\r\n\r\n  handleKeyDown (e) {\r\n    !this.activeKeys.includes(e.key) &&\r\n       this.activeKeys.push(e.key)\r\n  }\r\n\r\n  handleKeyUp (e) {\r\n    this.activeKeys.includes(e.key) &&\r\n      this.activeKeys.splice(this.activeKeys.indexOf(e.key), 1)\r\n  }\r\n}\r\n","import KeyListener from './KeyListener'\r\nimport {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  COMP_DIFFICULTY,\r\n  COMP_MAX_SPEED,\r\n  PADDLE_SPEED,\r\n  PADDLE_WIDTH,\r\n  PADDLE_HEIGHT,\r\n  COLOR_ACCENT,\r\n  BOARD_HEIGHT\r\n} = SETTINGS\r\n\r\nexport default class Paddle extends KeyListener {\r\n  constructor (x, initialY, keyDown, keyUp) {\r\n    super()\r\n    this.x = x\r\n    this.y = initialY\r\n    this.keyDown = keyDown\r\n    this.keyUp = keyUp\r\n    this.paused = false\r\n    this.paused = true\r\n\r\n    this.$paddle = makeEl('rect')\r\n    setAttr(this.$paddle, 'x', x)\r\n    setAttr(this.$paddle, 'width', PADDLE_WIDTH)\r\n    setAttr(this.$paddle, 'height', PADDLE_HEIGHT)\r\n    setAttr(this.$paddle, 'fill', COLOR_ACCENT)\r\n  }\r\n\r\n  get coordinates () {\r\n    return {\r\n      left: this.x,\r\n      top: this.y,\r\n      right: this.x + PADDLE_WIDTH,\r\n      bottom: this.y + PADDLE_HEIGHT\r\n    }\r\n  }\r\n\r\n  checkMove () {\r\n    if (!this.paused) {\r\n      this.activeKeys.includes(this.keyDown) && this.move(PADDLE_SPEED)\r\n      this.activeKeys.includes(this.keyUp) && this.move(-PADDLE_SPEED)\r\n    }\r\n  }\r\n\r\n  checkCompMove (ballPos) {\r\n    if (!this.paused) {\r\n      // randomized delay when direction changes\r\n      if (Math.random() > 1 / COMP_DIFFICULTY) {\r\n        this.move(this.yDiff)\r\n      } else {\r\n        this.yDiff = (this.y + (PADDLE_HEIGHT / 2)) - ballPos[1]\r\n        // cap speed as specified in settings\r\n        if (this.yDiff < -COMP_MAX_SPEED) {\r\n          this.yDiff = COMP_MAX_SPEED\r\n        } else if (this.yDiff > COMP_MAX_SPEED) {\r\n          this.yDiff = -COMP_MAX_SPEED\r\n        }\r\n        this.move(this.yDiff)\r\n      }\r\n    }\r\n  }\r\n\r\n  move (distance) {\r\n    // if not at top or bottom\r\n    if (this.y + distance < BOARD_HEIGHT - PADDLE_HEIGHT &&\r\n      this.y + distance > 0) {\r\n      this.y += distance\r\n    } else if (distance > 0) {\r\n      this.y = BOARD_HEIGHT - PADDLE_HEIGHT\r\n    } else {\r\n      this.y = 0\r\n    }\r\n  }\r\n\r\n  get el () {\r\n    return this.$paddle\r\n  }\r\n\r\n  update (paused, ballPos) {\r\n    this.paused = paused\r\n    ballPos // only passed for comp paddle\r\n      ? this.checkCompMove(ballPos)\r\n      : this.checkMove()\r\n    setAttr(this.$paddle, 'y', this.y)\r\n  }\r\n}\r\n","import SOUND from '../../public/sounds/pong-01.wav'\r\nimport {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  BALL_RADIUS,\r\n  BOARD_GAP,\r\n  BOARD_WIDTH,\r\n  BOARD_HEIGHT,\r\n  COLOR_ACCENT\r\n} = SETTINGS\r\n\r\nexport default class Ball {\r\n  constructor (increaseScore) {\r\n    this.$ball = makeEl('circle')\r\n    this.increaseScore = increaseScore\r\n    setAttr(this.$ball, 'r', BALL_RADIUS)\r\n    setAttr(this.$ball, 'fill', COLOR_ACCENT)\r\n    this.ping = new Audio(SOUND)\r\n    this.reset()\r\n  }\r\n\r\n  checkGoal () {\r\n    if (this.x <= BOARD_GAP) {\r\n      this.vx *= -1\r\n      this.increaseScore(1)\r\n      this.reset()\r\n    } else if (this.x >= BOARD_WIDTH - BOARD_GAP) {\r\n      this.vx *= -1\r\n      this.increaseScore(0)\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  checkWallCollision (paddles) {\r\n    const atTop = this.y - BALL_RADIUS <= 0\r\n    const atBottom = this.y + BALL_RADIUS >= BOARD_HEIGHT\r\n\r\n    if (atTop || atBottom) {\r\n      this.vy *= -1\r\n      this.ping.play().catch(e => null)\r\n    }\r\n\r\n    const [paddleLeft, paddleRight] = paddles\r\n    if (this.vx > 0) {\r\n      if (this.x + BALL_RADIUS >= paddleRight.left &&\r\n        this.x - (BALL_RADIUS / 3) <= paddleRight.right &&\r\n        this.y - (BALL_RADIUS / 3) <= paddleRight.bottom &&\r\n        this.y + (BALL_RADIUS / 3) >= paddleRight.top) {\r\n        this.vx *= -1\r\n        this.ping.play().catch(e => null)\r\n      }\r\n    } else if (this.x - BALL_RADIUS <= paddleLeft.right &&\r\n      this.x + (BALL_RADIUS / 3) >= paddleLeft.left &&\r\n      this.y - (BALL_RADIUS / 3) <= paddleLeft.bottom &&\r\n      this.y + (BALL_RADIUS / 3) >= paddleLeft.top) {\r\n      this.vx *= -1\r\n      this.ping.play().catch(e => null)\r\n    }\r\n  }\r\n\r\n  reset () {\r\n    this.x = BOARD_WIDTH / 2\r\n    this.y = BOARD_HEIGHT / 2\r\n    setAttr(this.$ball, 'cx', this.x)\r\n    setAttr(this.$ball, 'cy', this.y)\r\n\r\n    this.vx = null\r\n    while (!this.vx || this.vx === 0) {\r\n      this.vx = Math.floor(Math.random() * 10 - 5)\r\n    }\r\n    this.vy = (6 - Math.abs(this.vx))\r\n    if (Math.random() > 0.5) this.vy *= -1\r\n  }\r\n\r\n  get el () {\r\n    return this.$ball\r\n  }\r\n\r\n  get position () {\r\n    return [this.x, this.y]\r\n  }\r\n\r\n  update (paused, ...paddles) {\r\n    if (paused) return\r\n\r\n    setAttr(this.$ball, 'cx', this.x)\r\n    setAttr(this.$ball, 'cy', this.y)\r\n    this.x += this.vx\r\n    this.y += this.vy\r\n    this.checkWallCollision(paddles)\r\n    this.checkGoal()\r\n  }\r\n}\r\n","import {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  COLOR_ACCENT,\r\n  FONT_FAMILY,\r\n  FONT_SIZE,\r\n  SCORE_LIMIT\r\n} = SETTINGS\r\n\r\nexport default class Score {\r\n  constructor (onFinish) {\r\n    this.score = [0, 0]\r\n    this.onFinish = onFinish\r\n\r\n    this.$score = makeEl('text')\r\n    setAttr(this.$score, 'fill', COLOR_ACCENT)\r\n    setAttr(this.$score, 'x', 30)\r\n    setAttr(this.$score, 'y', 30)\r\n    setAttr(this.$score, 'font-family', FONT_FAMILY)\r\n    setAttr(this.$score, 'font-size', FONT_SIZE)\r\n  }\r\n\r\n  checkWinner () {\r\n    const highestScore = Math.max(...this.score)\r\n\r\n    if (highestScore >= SCORE_LIMIT) {\r\n      this.winner = this.score.indexOf(highestScore) + 1\r\n      this.onFinish(this.reset.bind(this))\r\n    }\r\n  }\r\n\r\n  increaseScore (i) {\r\n    this.score[i] += 1\r\n    this.checkWinner()\r\n  }\r\n\r\n  reset () {\r\n    this.score = [0, 0]\r\n    this.winner = null\r\n  }\r\n\r\n  get el () {\r\n    return this.$score\r\n  }\r\n\r\n  update () {\r\n    this.$score.textContent = this.winner\r\n      ? `P${this.winner} wins!`\r\n      : `${this.score[0]} - ${this.score[1]}`\r\n  }\r\n}\r\n","import SETTINGS from '../settings'\r\nconst { FONT_FAMILY } = SETTINGS\r\n\r\nexport default class SettingsModal {\r\n  constructor (btnEl, pause) {\r\n    this.isOpen = false\r\n\r\n    const $toggle = document.getElementById(btnEl)\r\n    $toggle.addEventListener('click', () => {\r\n      this.toggle()\r\n      pause(this.isOpen)\r\n    })\r\n\r\n    this.$modal = document.createElement('div')\r\n    this.$modal.classList.add('modal')\r\n\r\n    const $modalContent = document.createElement('div')\r\n    $modalContent.classList.add('modal__content')\r\n    $modalContent.style.fontFamily = FONT_FAMILY\r\n\r\n    const $modalCloseBtn = document.createElement('button')\r\n    $modalCloseBtn.innerText = 'cancel'\r\n    $modalCloseBtn.addEventListener(\r\n      'click',\r\n      () => {\r\n        this.toggle()\r\n        pause(false)\r\n      }\r\n    )\r\n\r\n    const $resetBtn = document.createElement('button')\r\n    $resetBtn.innerText = 'reset'\r\n    $resetBtn.addEventListener(\r\n      'click',\r\n      () => { window.location = window.location.href.split('?')[0] }\r\n    )\r\n\r\n    const $paddleSpeedLabel = document.createElement('label')\r\n    $paddleSpeedLabel.setAttribute('for', 'paddle-speed')\r\n    $paddleSpeedLabel.innerText = 'paddle speed: '\r\n    $paddleSpeedLabel.classList.add('modal__label')\r\n    const $paddleSpeedInput = document.createElement('input')\r\n    $paddleSpeedInput.setAttribute('id', 'paddle-speed')\r\n    $paddleSpeedInput.setAttribute('name', 'paddle-speed')\r\n    $paddleSpeedInput.setAttribute('type', 'range')\r\n    $paddleSpeedInput.setAttribute('min', 2)\r\n    $paddleSpeedInput.setAttribute('value', 10)\r\n    $paddleSpeedInput.setAttribute('max', 45)\r\n    $paddleSpeedLabel.appendChild($paddleSpeedInput)\r\n\r\n    const $ballRadiusLabel = document.createElement('label')\r\n    $ballRadiusLabel.setAttribute('for', 'ball-radius')\r\n    $ballRadiusLabel.innerText = 'ball radius: '\r\n    $ballRadiusLabel.classList.add('modal__label')\r\n    const $ballRadiusInput = document.createElement('input')\r\n    $ballRadiusInput.setAttribute('id', 'ball-radius')\r\n    $ballRadiusInput.setAttribute('name', 'ball-radius')\r\n    $ballRadiusInput.setAttribute('type', 'range')\r\n    $ballRadiusInput.setAttribute('min', 1)\r\n    $ballRadiusInput.setAttribute('value', 8)\r\n    $ballRadiusInput.setAttribute('max', 40)\r\n    $ballRadiusLabel.appendChild($ballRadiusInput)\r\n\r\n    const $paddleHeightLabel = document.createElement('label')\r\n    $paddleHeightLabel.setAttribute('for', 'paddle-height')\r\n    $paddleHeightLabel.innerText = 'paddle height: '\r\n    $paddleHeightLabel.classList.add('modal__label')\r\n    const $paddleHeightInput = document.createElement('input')\r\n    $paddleHeightInput.setAttribute('id', 'paddle-height')\r\n    $paddleHeightInput.setAttribute('name', 'paddle-height')\r\n    $paddleHeightInput.setAttribute('type', 'range')\r\n    $paddleHeightInput.setAttribute('min', 5)\r\n    $paddleHeightInput.setAttribute('value', 56)\r\n    $paddleHeightInput.setAttribute('max', 150)\r\n    $paddleHeightLabel.appendChild($paddleHeightInput)\r\n\r\n    const $onePlayerToggleLabel = document.createElement('label')\r\n    $onePlayerToggleLabel.setAttribute('for', 'one-player')\r\n    $onePlayerToggleLabel.innerText = 'single player: '\r\n    $onePlayerToggleLabel.classList.add('modal__label')\r\n    const $onePlayerToggleInput = document.createElement('input')\r\n    $onePlayerToggleInput.setAttribute('id', 'one-player')\r\n    $onePlayerToggleInput.setAttribute('name', 'one-player')\r\n    $onePlayerToggleInput.setAttribute('type', 'checkbox')\r\n    $onePlayerToggleInput.setAttribute('value', false)\r\n    $onePlayerToggleInput.classList.add('modal__checkbox')\r\n    $onePlayerToggleLabel.appendChild($onePlayerToggleInput)\r\n\r\n    const $compDifficultyLabel = document.createElement('label')\r\n    $compDifficultyLabel.setAttribute('for', 'comp-difficulty')\r\n    $compDifficultyLabel.innerText = 'computer difficulty: '\r\n    $compDifficultyLabel.classList.add('modal__label')\r\n    const $compDifficultyInput = document.createElement('input')\r\n    $compDifficultyInput.setAttribute('id', 'comp-difficulty')\r\n    $compDifficultyInput.setAttribute('name', 'comp-difficulty')\r\n    $compDifficultyInput.setAttribute('type', 'range')\r\n    $compDifficultyInput.setAttribute('min', 5)\r\n    $compDifficultyInput.setAttribute('value', 7)\r\n    $compDifficultyInput.setAttribute('max', 10)\r\n    $compDifficultyLabel.appendChild($compDifficultyInput)\r\n\r\n    const $createGameBtn = document.createElement('button')\r\n    $createGameBtn.innerText = 'create game'\r\n    $createGameBtn.addEventListener(\r\n      'click',\r\n      () => {\r\n        window.location = `${window.location.href.split('?')[0]}?PADDLE_SPEED=${$paddleSpeedInput.value}&BALL_RADIUS=${$ballRadiusInput.value}&PADDLE_HEIGHT=${$paddleHeightInput.value}&SINGLE_PLAYER=${$onePlayerToggleInput.checked ? 1 : 0}&COMP_DIFFICULTY=${$compDifficultyInput.value}`\r\n      }\r\n    )\r\n\r\n    $modalContent.appendChild($paddleSpeedLabel)\r\n    $modalContent.appendChild($ballRadiusLabel)\r\n    $modalContent.appendChild($paddleHeightLabel)\r\n    $modalContent.appendChild($onePlayerToggleLabel)\r\n    $modalContent.appendChild($compDifficultyLabel)\r\n    $modalContent.appendChild($modalCloseBtn)\r\n    $modalContent.appendChild($resetBtn)\r\n    $modalContent.appendChild($createGameBtn)\r\n    this.$modal.appendChild($modalContent)\r\n  }\r\n\r\n  toggle () {\r\n    if (this.isOpen) this.close()\r\n    else this.open()\r\n  }\r\n\r\n  open () {\r\n    document.documentElement.appendChild(this.$modal)\r\n    this.isOpen = true\r\n  }\r\n\r\n  close () {\r\n    document.documentElement.removeChild(this.$modal)\r\n    this.isOpen = false\r\n  }\r\n}\r\n","import Board from './Board'\r\nimport CenterLine from './CenterLine'\r\nimport Paddle from './Paddle'\r\nimport Ball from './Ball'\r\nimport Score from './Score'\r\nimport SettingsModal from './SettingsModal'\r\nimport {\r\n  setSvgAttr as setAttr,\r\n  makeSvgEl as makeEl\r\n} from '../utils'\r\nimport SETTINGS from '../settings'\r\n\r\nconst {\r\n  BOARD_WIDTH,\r\n  BOARD_HEIGHT,\r\n  BOARD_GAP,\r\n  KEYS,\r\n  PADDLE_WIDTH,\r\n  PADDLE_HEIGHT,\r\n  SINGLE_PLAYER\r\n} = SETTINGS\r\n\r\nexport default class Game {\r\n  constructor (element) {\r\n    // create svg el\r\n    this.$svg = makeEl('svg')\r\n    setAttr(this.$svg, 'width', BOARD_WIDTH)\r\n    setAttr(this.$svg, 'height', BOARD_HEIGHT)\r\n    setAttr(this.$svg, 'viewbox', `0 0 ${BOARD_WIDTH} ${BOARD_HEIGHT}`)\r\n\r\n    // set up pause listener\r\n    this.paused = true\r\n    document.addEventListener(\r\n      'keydown',\r\n      e => {\r\n        if (e.key === ' ' && this.finished) {\r\n          this.finished = false\r\n          this.reset()\r\n        } else if (e.key === ' ' && !this.hardPaused) {\r\n          this.pause(!this.paused)\r\n        }\r\n      }\r\n    )\r\n\r\n    // init game components\r\n    this.paddleLeft = new Paddle(\r\n      BOARD_GAP,\r\n      (BOARD_HEIGHT - PADDLE_HEIGHT) / 2,\r\n      KEYS.PLAYER1.DOWN,\r\n      KEYS.PLAYER1.UP\r\n    )\r\n    this.paddleRight = new Paddle(\r\n      BOARD_WIDTH - PADDLE_WIDTH - BOARD_GAP,\r\n      (BOARD_HEIGHT - PADDLE_HEIGHT) / 2,\r\n      KEYS.PLAYER2.DOWN,\r\n      KEYS.PLAYER2.UP\r\n    )\r\n    this.score = new Score(this.finish.bind(this))\r\n    this.ball = new Ball(this.score.increaseScore.bind(this.score))\r\n    this.ball.update(\r\n      this.paddleLeft.coordinates,\r\n      this.paddleRight.coordinates\r\n    )\r\n    this.settings = new SettingsModal('settings-toggle', this.hardPause.bind(this))\r\n\r\n    // append game components to svg\r\n    this.$svg.appendChild(new Board().el)\r\n    this.$svg.appendChild(new CenterLine().el)\r\n    this.$svg.appendChild(this.score.el)\r\n    this.$svg.appendChild(this.ball.el)\r\n    this.$svg.appendChild(this.paddleLeft.el)\r\n    this.$svg.appendChild(this.paddleRight.el)\r\n\r\n    // render svg\r\n    this.$container = document.getElementById(element)\r\n    this.$container.appendChild(this.$svg)\r\n  }\r\n\r\n  pause (val) {\r\n    this.paused = val\r\n  }\r\n\r\n  hardPause (val) {\r\n    // cannot unpause with SPACE\r\n    this.hardPaused = val\r\n    this.paused = true\r\n  }\r\n\r\n  finish (reset) {\r\n    this.finished = true\r\n    this.reset = reset\r\n  }\r\n\r\n  update () {\r\n    if (this.finished) return\r\n\r\n    this.ball.update(\r\n      this.paused,\r\n      this.paddleLeft.coordinates,\r\n      this.paddleRight.coordinates\r\n    )\r\n    this.paddleLeft.update(this.paused)\r\n    this.paddleRight.update(this.paused, SINGLE_PLAYER && this.ball.position)\r\n    this.score.update()\r\n  }\r\n}\r\n","import './styles/game.css'\nimport './styles/slider.css'\nimport './styles/button.css'\nimport './styles/modal.css'\nimport Game from './partials/Game'\n\n// create a game instance\nconst game = new Game('game');\n\n(function gameLoop () {\n  game.update()\n  requestAnimationFrame(gameLoop)\n})()\n"]}